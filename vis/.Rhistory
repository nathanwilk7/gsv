require(ISLR)
require(boot)
?cv.glm
?glm
?cv.glm
plot(mpg~horsepower,data=Auto)
glm.fit=glm(mpg~horsepower, data=Auto)
cv.glm(Auto,glm.fit)$delta
cv.glm(Auto,glm.fit)
cv.glm(Auto,glm.fit)$delta
loocv=function(fit){
h=lm.influence(fit)$h
mean((residuals(fit)/(1-h))^2)
}
loocv(glm.fit)
cv.error=rep(0,5)
degree=1:5
for(d in degree){
glm.fit=glm(mpg~poly(horsepower,d), data=Auto)
cv.error[d]=loocv(glm.fit)
}
plot(degree,cv.error,type="b")
plot(degree,cv.error)
plot(degree,cv.error,type="b")
loocv(glm.fit)
cv.error=rep(0,5)
degree=1:15
for(d in degree){
glm.fit=glm(mpg~poly(horsepower,d), data=Auto)
cv.error[d]=loocv(glm.fit)
}
plot(degree,cv.error,type="b")
cv.error10=rep(0,5)
for(d in degree){
glm.fit=glm(mpg~poly(horsepower,d), data=Auto)
cv.error10[d]=cv.glm(Auto,glm.fit,K=10)$delta[1]
}
lines(degree,cv.error10,type="b",col="red")
Model Selection
================
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages,
library(ISLR)
summary(Hitters)
install(leaps)
install.packages('leaps')
install.packages('glmnet')
c(1,2,3)
vec = c(7,3,11)
vec
vec[0]
vec[1]
vec[2]
vec[3]
vec[4]
vec <- c(7,3,11)
vec
y = c(1,4,3)
x = vec
length(x)
length(y)
x+y
ls()
rm(x,y)
ls()
rm(vec)
ls()
rm(list=ls())
results = c(1,0,1,1,1,0,1,0,1,1,1,1,1)
results / length(results)
rm(list=ls())
(pt2 - pt1) /2
pt1 = c(1,1,1)
pt2 = c(0,0,0)
(pt2 - pt1) / 2
(pt2 + pt1) / 2
install.packages('bnlearn')
library(bnlearn)
version
e = empty.graph(LETTERS{1:6})
e = empty.graph(LETTERS[1:6])
e
class(e)
empty.graph(LETTERS[1:6], num = 2)
c.set = matrix(c("A", "C", "B", "F", "C", "F"),
ncol = 2, byrow = TRUE,
dimnames = list(NULL, c("from", "to")))
arc.set = matrix(c("A", "C", "B", "F", "C", "F"),
ncol = 2, byrow = TRUE,
dimnames = list(NULL, c("from", "to")))
rm(c.set)
arc.set
arc(e) = arc.set
arcs(e) = arc.set
e
bogus = matrix(c("X", "Y", "W", "Z"),
byrow = TRUE, ncol=2,
dimnames = list(NULL, c("from", "to")))
bogus
arcs(e) = bogus
adj = matrix(0L, nrow=6, ncol=6, dimnames=list(LETTERS[1:6],LETTERS[1:6]))
adj = matrix(0L, nrow=6, ncol=6, dimnames=c(LETTERS[1:6],LETTERS[1:6]))
adj = matrix(0L, nrow=6, ncol=6, dimnames=list(LETTERS[1:6],LETTERS[1:6]))
adj
adj["A", "C"] = 1L
adj["B", "F"] = 1L
adj["C", "F"] = 1L
adj["D", "E"] = 1L
adj["A", "E"] = 1L
adj
amat(e) = adj
e
model2network("[A][C][B|A][D|C][F|A:B:D][E|F]")
model2network("[A][C][B|A][D|C][F|A:B:D][E|F]")
modelstring(e) = "[A][C][B|A][D|C][F|A:B:C][E|F]"
e
setwd('/Users/nathanwilkinson/quinlan-lab/gsv/vis')
dats = read.csv('features-train.csv')
setwd('/Users/nathanwilkinson/quinlan-lab/gsv/vis')
dats = read.csv('features-train.csv')
dats[true_genotype]
dats$true_genotype
dats.dels = subset(dats, svtype == 'DEL')
View(dats)
refs = subset(dats.dels, True_Genotype == '0/0')
refs = subset(dats.dels, truth_genotype == '0/0')
refs = subset(dats.dels, true_genotype == '0/0')
hets = subset(dats.dels, true_genotype == '0/1')
alts = subset(dats.dels, true_genotype == '1/1')
refs[['spanners']] = refs[['left_breakpoint_spanners']] + refs[['right_breakpoint_spanners']]
hets[['spanners']] = hets[['left_breakpoint_spanners']] + hets[['right_breakpoint_spanners']]
alts[['spanners']] = alts[['left_breakpoint_spanners']] + alts[['right_breakpoint_spanners']]
refs[['splitters']] = refs[['left_splitters']] + refs[['right_splitters']]
hets[['splitters']] = hets[['left_splitters']] + hets[['right_splitters']]
alts[['splitters']] = alts[['left_splitters']] + alts[['right_splitters']]
plot(hets[['spanners']], hets[['splitters']], col='blue', xlim=c(0,200), ylim=c(0,100))
#main='Genotypes (Spanners, Splitters)', xlab='spanners', ylab='Splitters')
points(alts[['spanners']], alts[['splitters']], col='green', pch=0)
points(refs[['spanners']], refs[['splitters']], col='red', pch=2)
legend(100, 60, pch=c(0,1,2), col=c('green', 'blue', 'red'),
c('Hom Alt', 'Het', 'Hom Ref'), text.width=21, y.intersp=1.3)
plot(hets[['spanners']], hets[['splitters']], col='blue', xlim=c(0,100), ylim=c(0,45))
#main='Genotypes (Spanners, Splitters)', xlab='spanners', ylab='Splitters')
points(alts[['spanners']], alts[['splitters']], col='green', pch=0)
points(refs[['spanners']], refs[['splitters']], col='red', pch=2)
plot(hets[['spanners']], hets[['spanners']], col='blue', xlim=c(0,100), ylim=c(0,45))
#main='Genotypes (Spanners, Splitters)', xlab='spanners', ylab='Splitters')
points(alts[['spanners']], alts[['spanners']], col='green', pch=0)
points(refs[['spanners']], refs[['spanners']], col='red', pch=2)
plot(hets[['spanners']], hets[['spanners']], col='blue')
#main='Genotypes (Spanners, Splitters)', xlab='spanners', ylab='Splitters')
points(alts[['spanners']], alts[['spanners']], col='green', pch=0)
points(refs[['spanners']], refs[['spanners']], col='red', pch=2)
breaks <- pretty(range(c(refs['left_breakpoint_spanners'],
hets['left_breakpoint_spanners'],
alts['left_breakpoint_spanners'])),
n=20)
breaks
refs.hist <- hist(refs['left_breakpoint_spanners'], breaks=breaks, plot=FALSE)$counts
?hist
refs['left_breakpoint_spanners']
refs.hist <- hist(as.numeric(refs['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
refs.hist <- hist(transform(refs, as.numeric(left_breakpoint_spanners)), breaks=breaks, plot=FALSE)$counts
transform(refs, as.numeric(left_breakpoint_spanners))
transform(refs, as.numeric(left_breakpoint_spanners))['left_breakpoint_spanners']
refs.hist <- hist(transform(refs, as.numeric(left_breakpoint_spanners))['left_breakpoint_spanners'], breaks=breaks, plot=FALSE)$counts
transform(refs, as.numeric(left_breakpoint_spanners))['left_breakpoint_spanners']
typeof(transform(refs, as.numeric(left_breakpoint_spanners))['left_breakpoint_spanners'])
refs.hist <- hist(c(refs['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
refs.hist <- hist(data.matrix(refs['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2)
?barplot
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('blue', 'red', 'green'))
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'))
field.name = 'left_breakpoint_spanners'
breaks <- pretty(range(c(refs[field.name],
hets['left_breakpoint_spanners'],
alts['left_breakpoint_spanners'])),
n=20)
refs.hist <- hist(data.matrix(refs['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts['left_breakpoint_spanners']), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'))
?barplot
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'right_breakpoint_spanners'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'avg_coverage_diff'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'right_clippers'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'left_clippers'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'mismatched_over_sv'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'ref_bases_covered_left_possible'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
hets[field.name],
breaks <- pretty(range(c(refs[field.name],
field.name = 'ref_bases_covered_left_actual'
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'ref_bases_covered_left_actual'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'splitters'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'ref_bases_covered_right_possible'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'ref_bases_covered_right_actual'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'ref_avg_base_coverage'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'ref_coverage_pct'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'alt_bases_covered_possible'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'alt_bases_covered_actual'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
?barplot
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name, xlim=5000)
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name, xlim=c(0,5000))
?barplot
barplot(dat, beside=TRUE, space=c(0, 0.1),
col = c('red', 'blue', 'green'), main=field.name, xlim=c(0,5000))
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'alt_avg_base_coverage'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'alt_coverage_pct'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'left_splitters'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'right_splitters'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'splitter_spanners'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'spanners'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'splitters'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
?barplot
barplot(dat, beside=FALSE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
TRUE
TRUE
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
field.name = 'splitters'
breaks <- pretty(range(c(refs[field.name],
hets[field.name],
alts[field.name])),
n=20)
refs.hist <- hist(data.matrix(refs[field.name]), breaks=breaks, plot=FALSE)$counts
alts.hist <- hist(data.matrix(alts[field.name]), breaks=breaks, plot=FALSE)$counts
dat <- rbind(refs.hist, hets.hist, alts.hist)
hets.hist <- hist(data.matrix(hets[field.name]), breaks=breaks, plot=FALSE)$counts
colnames(dat) <- paste(breaks[-length(breaks)], breaks[-1], sep="-")
## Plot it
barplot(dat, beside=TRUE, space=c(0, 0.1), las=2,
col = c('red', 'blue', 'green'), main=field.name)
